// <auto-generated />
using System;
using DotNet5Framework.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNet5Framework.DataAccess.Migrations
{
    [DbContext(typeof(DotNet5FrameworkContext))]
    partial class DotNet5FrameworkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNet5Framework.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Initial Category 1",
                            Status = (short)0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Initial Category 2",
                            Status = (short)0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Initial Category 3",
                            Status = (short)0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Initial Category 4",
                            Status = (short)0
                        });
                });

            modelBuilder.Entity("DotNet5Framework.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 7, 24, 18, 44, 56, 947, DateTimeKind.Local).AddTicks(3481));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2021, 7, 24, 18, 44, 56, 952, DateTimeKind.Local).AddTicks(2998),
                            Name = "Initial Product 1",
                            Price = 10m,
                            Status = (short)0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 100,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2021, 7, 24, 18, 44, 56, 952, DateTimeKind.Local).AddTicks(3500),
                            Name = "Initial Product 2",
                            Price = 10m,
                            Status = (short)0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2021, 7, 24, 18, 44, 56, 952, DateTimeKind.Local).AddTicks(3504),
                            Name = "Initial Product 3",
                            Price = 10m,
                            Status = (short)0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2021, 7, 24, 18, 44, 56, 952, DateTimeKind.Local).AddTicks(3507),
                            Name = "Initial Product 4",
                            Price = 10m,
                            Status = (short)0
                        });
                });

            modelBuilder.Entity("DotNet5Framework.Entities.Concrete.Product", b =>
                {
                    b.HasOne("DotNet5Framework.Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DotNet5Framework.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
